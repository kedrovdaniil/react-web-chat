[{"D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\App.js":"1","D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\components\\main\\login\\LoginForm.jsx":"2","D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\components\\account\\chat\\ChatC.jsx":"3","D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\components\\main\\registration\\RegistrationForm.jsx":"4","D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\components\\main\\Main.jsx":"5","D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\components\\account\\rooms\\Rooms.jsx":"6","D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\components\\account\\Messenger.jsx":"7","D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\components\\account\\chat\\addMessage\\AddMessage.jsx":"8","D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\components\\account\\chat\\message\\Message.jsx":"9","D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\components\\account\\rooms\\room\\Room.jsx":"10","D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\components\\modal\\Modal.jsx":"11","D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\components\\portal\\Portal.jsx":"12","D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\components\\account\\chat\\Chat.jsx":"13","D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\api\\api.js":"14","D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\helpers\\helpers.js":"15","D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\index.js":"16","D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\components\\websocket\\WebSocketHOC.jsx":"17","D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\components\\loader\\Loader.jsx":"18","D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\contexts\\ChatsProvider.jsx":"19","D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\components\\auth\\AuthHOC.jsx":"20","D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\contexts\\StoreProvider.jsx":"21","D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\utils\\useLocalStorage.js":"22"},{"size":3435,"mtime":1612116028278,"results":"23","hashOfConfig":"24"},{"size":1082,"mtime":1609686586306,"results":"25","hashOfConfig":"24"},{"size":1789,"mtime":1616670999429,"results":"26","hashOfConfig":"24"},{"size":1131,"mtime":1609686582730,"results":"27","hashOfConfig":"24"},{"size":3159,"mtime":1612105195247,"results":"28","hashOfConfig":"24"},{"size":917,"mtime":1612107106394,"results":"29","hashOfConfig":"24"},{"size":1814,"mtime":1616507496793,"results":"30","hashOfConfig":"24"},{"size":1127,"mtime":1612169479594,"results":"31","hashOfConfig":"24"},{"size":258,"mtime":1609793775119,"results":"32","hashOfConfig":"24"},{"size":1573,"mtime":1612107168131,"results":"33","hashOfConfig":"24"},{"size":1611,"mtime":1612105195247,"results":"34","hashOfConfig":"24"},{"size":232,"mtime":1609964997996,"results":"35","hashOfConfig":"24"},{"size":2143,"mtime":1616671692542,"results":"36","hashOfConfig":"24"},{"size":1889,"mtime":1616497023313,"results":"37","hashOfConfig":"24"},{"size":237,"mtime":1610017234855,"results":"38","hashOfConfig":"24"},{"size":500,"mtime":1609963473526,"results":"39","hashOfConfig":"24"},{"size":2273,"mtime":1616747263480,"results":"40","hashOfConfig":"24"},{"size":278,"mtime":1609686366217,"results":"41","hashOfConfig":"24"},{"size":8844,"mtime":1616672850794,"results":"42","hashOfConfig":"24"},{"size":1952,"mtime":1612170723982,"results":"43","hashOfConfig":"24"},{"size":1099,"mtime":1612121715304,"results":"44","hashOfConfig":"24"},{"size":1513,"mtime":1612121665253,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"wyfk6u",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"60"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\App.js",["106","107","108","109","110"],"D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\components\\main\\login\\LoginForm.jsx",[],["111","112"],"D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\components\\account\\chat\\ChatC.jsx",["113","114","115","116","117","118","119"],"import React from 'react';\r\nimport { useContext, useState, useEffect, memo, useCallback } from 'react';\r\nimport { StoreContext } from '../../../contexts/StoreProvider';\r\nimport Echo from 'laravel-echo';\r\nimport { ChatsAPI } from '../../../api/api';\r\nimport Chat from './Chat';\r\nimport { ChatsContext } from '../../../contexts/ChatsProvider';\r\n\r\nconst ChatC = memo(({ chatId, rooms }) => {\r\n\r\n    const { state, setState } = useContext(StoreContext)\r\n    const { chatsState, setNewMessage } = useContext(ChatsContext)\r\n\r\n    const messages = chatsState.rooms.find(room => room.id === chatId)?.messages?.data ?? []\r\n\r\n    // add new message\r\n    const addNewMessage = (message) => {\r\n\r\n        console.log('message', message)\r\n\r\n        const newMessage = {\r\n            id: Date.now(),\r\n            chat_id: chatId,\r\n            user_id: state.user_id,\r\n            content: message,\r\n            created_at: Date.now(),\r\n            updated_at: Date.now(),\r\n        }\r\n\r\n        setNewMessage(newMessage, chatId, true)\r\n    }\r\n\r\n    // chat name\r\n    const room = rooms.filter(r => r.id === chatId)[0]\r\n    const roomName = room.name\r\n    const chatName = roomName ? roomName : room.countOfMembers === 2 ? `Чат с ${room.members.filter(m => m.id != state.user_id)[0].name}` : \"Чат без названия\"\r\n\r\n    // is public\r\n    const isPublic = room.countOfMembers > 2\r\n\r\n    // is loading\r\n    // console.log('isLoadingActive room.messages', room.messages)\r\n    const isLoadingActive = room.messages.isLoaderActive\r\n\r\n    return (\r\n        <>\r\n            <Chat isPublic={isPublic} chatName={chatName} messages={messages} isLoadingActive={isLoadingActive} chatId={chatId} addNewMessage={addNewMessage} userId={state.user_id} />\r\n        </>\r\n    );\r\n})\r\n\r\nexport default ChatC;\r\n","D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\components\\main\\registration\\RegistrationForm.jsx",[],["120","121"],"D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\components\\main\\Main.jsx",["122","123"],"import s from \"./Main.module.scss\"\r\nimport React, { useContext, useEffect, useState } from \"react\"\r\nimport { AuthAPI } from \"../../api/api\"\r\nimport RegistrationForm from \"./registration/RegistrationForm\"\r\nimport LoginForm from \"./login/LoginForm\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport Loader from '../loader/Loader';\r\nimport { StoreContext } from '../../contexts/StoreProvider';\r\n\r\nconst Main = () => {\r\n\tconst { state, setState } = useContext(StoreContext)\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchAuth = async () => {\r\n\t\t\tconst r = await AuthAPI.user()\r\n\t\t\tif (r.status === 401) {\r\n\t\t\t\tsetState(state => ({\r\n\t\t\t\t\t...state, appInitialized: true, auth: false\r\n\t\t\t\t}))\r\n\t\t\t} else if (r.status === 500) {\r\n\t\t\t\tconsole.warn('Кажется, с сервером сейчас какие-то неполадки. Пожалуйста, попробуйте зайти позже.')\r\n\t\t\t\tsetState(state => ({\r\n\t\t\t\t\t...state, appInitialized: true, auth: false, appError: r.data.error, modalType: 'error', modalTitle: 'Error', modalAllowForClose: true, isModalOpen: true\r\n\t\t\t\t}))\r\n\t\t\t} else {\r\n\t\t\t\tsetState(state => ({\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tappInitialized: true,\r\n\t\t\t\t\tuser_id: r.id,\r\n\t\t\t\t\tauth: true,\r\n\t\t\t\t\tname: r.name,\r\n\t\t\t\t\tavatarUrl: r.avatar_url,\r\n\t\t\t\t}))\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tfetchAuth()\r\n\t}, [setState])\r\n\r\n\tconst onSubmitHandler = async (login, password) => {\r\n\t\tconst status = await AuthAPI.login(login, password)\r\n\t\tif (status === 204) {\r\n\t\t\tconst r = await AuthAPI.user()\r\n\t\t\tsetState((state) => ({ ...state, auth: true, name: r.name, avatarUrl: r.avatar_url }))\r\n\t\t}\r\n\t}\r\n\tconst logoutHandler = async () => {\r\n\t\tconst status = await AuthAPI.logout()\r\n\t\tif (status === 204) {\r\n\t\t\tsetState((state) => ({ ...state, auth: false, name: \"\", avatarUrl: \"\" }))\r\n\t\t}\r\n\t}\r\n\tlet history = useHistory()\r\n\tconst enterHandler = () => {\r\n\t\thistory.push(\"/chats\")\r\n\t}\r\n\r\n\treturn (\r\n\t\t<StoreContext.Consumer>{({ state }) => (\r\n\r\n\t\t\tstate.appInitialized ? (\r\n\t\t\t\t<main className={s.main} >\r\n\t\t\t\t\t<style>\r\n\t\t\t\t\t\tfont-family: \"Franklin Gothic Medium\", \"Arial Narrow\", Arial, sans-serif;\r\n\t\t\t\t\t</style>\r\n\r\n\t\t\t\t\t<span className={s.welcome}>\r\n\t\t\t\t\t\tWelcome to <span className={s.green}>Web</span>Chat\r\n\t\t\t\t\t\t<span className={s.green}>!</span>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t{ state.auth ? (\r\n\t\t\t\t\t\t<div className={s.account}>\r\n\t\t\t\t\t\t\t<img src={state.avatarUrl} alt={state.name + \" avatar\"} />\r\n\t\t\t\t\t\t\t<span>Account: {state.name}</span>\r\n\t\t\t\t\t\t\t<button className={s.enter} onClick={enterHandler}>\r\n\t\t\t\t\t\t\t\tEnter\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t<button className={s.logOut} onClick={logoutHandler}>\r\n\t\t\t\t\t\t\t\tLog out\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<div className={s.login}>\r\n\t\t\t\t\t\t\t\t<div className={s.row}>\r\n\t\t\t\t\t\t\t\t\t<RegistrationForm onSubmitHandler={onSubmitHandler} />\r\n\t\t\t\t\t\t\t\t\t<span>or login</span>\r\n\t\t\t\t\t\t\t\t\t<LoginForm onSubmitHandler={onSubmitHandler} />\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{/* <Account\r\n\t\t\t\tname={state.name}\r\n\t\t\t\tauth={state.auth}\r\n\t\t\t\tavatarUrl={state.avatarUrl}\r\n\t\t\t\tonSubmitHandler={onSubmitHandler}\r\n\t\t\t/> */}\r\n\t\t\t\t</main>\r\n\t\t\t) : (\r\n\t\t\t\t\t<Loader />\r\n\t\t\t\t)\r\n\t\t)}\r\n\t\t</StoreContext.Consumer >\r\n\t)\r\n}\r\n\r\nexport default Main\r\n",["124","125"],"D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\components\\account\\rooms\\Rooms.jsx",[],["126","127"],"D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\components\\account\\Messenger.jsx",["128","129","130","131","132","133"],"import s from \"./Messenger.module.scss\"\r\nimport React, { useEffect, useState, useContext } from \"react\"\r\nimport Room from \"./rooms/room/Room\"\r\nimport Rooms from \"./rooms/Rooms\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { AuthAPI, ChatsAPI } from \"../../api/api\"\r\nimport Loader from '../loader/Loader';\r\nimport Chat from './chat/Chat';\r\nimport { StoreContext } from '../../contexts/StoreProvider';\r\nimport ChatC from './chat/ChatC';\r\nimport { ChatsContext } from '../../contexts/ChatsProvider';\r\n\r\nconst Messenger = () => {\r\n\r\n\t// context\r\n\tconst { state } = useContext(StoreContext)\r\n\tconst { chatsState, setActiveChat } = useContext(ChatsContext)\r\n\tconsole.log('chatsState', chatsState)\r\n\r\n\t// active room\r\n\tconst [activeRoomId, setActiveIdRoom] = useState(null)\r\n\tconst setActiveRoom = (id) => {\r\n\t\tsetActiveIdRoom(id)\r\n\t\tsetActiveChat(id)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{ state.appInitialized && state.auth ?\r\n\r\n\t\t\t\t<div className={s.messengerWrapper}>\r\n\t\t\t\t\t<div className={s.head}>\r\n\t\t\t\t\t\t<div className={s.accountWrapper}>\r\n\t\t\t\t\t\t\t{state.avatarUrl ? (\r\n\t\t\t\t\t\t\t\t<img src={state.avatarUrl} alt={state.name + \" avatar\"} />\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<div className={s.noAvatar}></div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t<span className={s.account}>Account: {state.name}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Link to=\"/\" className={s.backBtn}>Back</Link>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={s.rooms}>\r\n\t\t\t\t\t\t<Rooms activeRoom={activeRoomId} rooms={chatsState.rooms} setActiveRoom={setActiveRoom} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={s.chat}>\r\n\t\t\t\t\t\t{activeRoomId ?\r\n\t\t\t\t\t\t\t<ChatC chatId={activeRoomId} rooms={chatsState.rooms} />\r\n\t\t\t\t\t\t\t: <div className={s.textCenter}>Выберите диалог</div>}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t: <Loader />}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Messenger\r\n","D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\components\\account\\chat\\addMessage\\AddMessage.jsx",[],"D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\components\\account\\chat\\message\\Message.jsx",[],"D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\components\\account\\rooms\\room\\Room.jsx",["134","135","136","137","138","139","140","141"],"import React, { useContext } from 'react';\r\nimport s from './Room.module.scss'\r\nimport { StoreContext } from '../../../../contexts/StoreProvider';\r\n\r\nconst Room = ({avatarUrl, name, setAsActiveRoom, roomId, activeRoom, members, myId}) => {\r\n\r\n    // context\r\n    const {state} = useContext(StoreContext)\r\n\r\n    const userId = state.user_id\r\n    const isPublicChat = members.length !== 2 ? true : false\r\n\r\n    const getAvatar = () => {\r\n        if (isPublicChat) {\r\n            return avatarUrl ? avatarUrl : \"\"\r\n        } else {\r\n            const anotherMan = members.filter(m => m.id != userId)[0]\r\n            return anotherMan.avatar_url\r\n        }\r\n    }\r\n    \r\n    const getRoomName = () => {\r\n        if (isPublicChat) {\r\n            return name ? name : \"Общий чат\"\r\n        } else {\r\n            const anotherMan = members.filter(m => m.id != userId)[0]\r\n            return anotherMan.name\r\n        }\r\n    }\r\n\r\n    if (!!isPublicChat) {\r\n        const avatar = avatarUrl ? avatarUrl : \"\"\r\n        const roomName = name ? name : \"Общий чат\"\r\n    } else {\r\n        const anotherMan = members.filter(m => m.id != userId)[0]\r\n        const avatar = anotherMan.avatar_url\r\n        const roomName = anotherMan.name\r\n    }\r\n\r\n    return (\r\n        <div className={Number(activeRoom) === Number(roomId) ? `${s.chat} ${s.chatActive}` : s.chat} onClick={(e) => setAsActiveRoom(Number(e.target.dataset.id))} data-id={roomId}>\r\n            <img src={getAvatar()} />\r\n            <span>{getRoomName()}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Room;\r\n",["142","143"],"D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\components\\modal\\Modal.jsx",[],"D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\components\\portal\\Portal.jsx",["144"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst Portal = ({children}) => {\r\n    return ReactDOM.createPortal(\r\n        children,\r\n        document.getElementById('modal')\r\n    );\r\n}\r\n\r\nexport default Portal;\r\n","D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\components\\account\\chat\\Chat.jsx",["145","146","147","148","149","150","151","152","153"],"import React, { createRef, useCallback, useContext, useMemo, useRef } from 'react';\r\nimport s from './Chat.module.scss'\r\nimport Message from './message/Message';\r\nimport { useState, useEffect, memo } from 'react';\r\nimport { ChatsAPI } from '../../../api/api';\r\nimport AddMessage from './addMessage/AddMessage';\r\nimport { StoreContext } from '../../../contexts/StoreProvider';\r\nimport Echo from \"laravel-echo\"\r\nimport { ChatsContext } from '../../../contexts/ChatsProvider';\r\n\r\nconst Chat = memo(({ isPublic, chatName, messages, isLoadingActive, chatId, addNewMessage, userId }) => {\r\n    console.log('isLoadingActive', isLoadingActive)\r\n\r\n    // context\r\n    const { onScrollToTop } = useContext(ChatsContext)\r\n\r\n    // ref\r\n    const messagesContainer = useRef()\r\n\r\n    useEffect(() => {\r\n        messagesContainer.current.addEventListener('scroll', onScrollToTop)\r\n        return () => messagesContainer.current.removeEventListener('scroll', onScrollToTop)\r\n    }, [])\r\n\r\n    return (\r\n        <div className={s.chat}>\r\n            <>\r\n                <div className={s.head}>\r\n                    {isLoadingActive && <div className={s.loader}>\r\n                        <img src=\"/loader.gif\" alt=\"Loading\" />\r\n                    </div>}\r\n                    <div className={s.chatName}>\r\n                        <span>{chatName}</span>\r\n                    </div>\r\n                </div>\r\n                <div className={s.messages} ref={messagesContainer}>\r\n                    <div className={s.messagesDiv}>\r\n\r\n                        {messages ? messages.map((message, i) => (\r\n                            <Message message={message.content} isMy={userId === message.user_id} createdAt={message.created_at} key={i} />\r\n                        )) : <div className={s.textCenter}>\r\n                            <img src=\"/donut.gif\" alt=\"Loading\" className={s.donut} />\r\n                        Loading...\r\n                        </div>}\r\n                    </div>\r\n                </div>\r\n                <AddMessage chatId={chatId} addNewMessage={addNewMessage} />\r\n            </>\r\n        </div>\r\n    );\r\n})\r\n\r\nexport default Chat;\r\n","D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\api\\api.js",[],"D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\helpers\\helpers.js",["154","155","156","157","158","159"],"export function getCookie(name) {\r\n\tlet matches = document.cookie.match(\r\n\t\tnew RegExp(\"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, \"\\\\$1\") + \"=([^;]*)\")\r\n\t)\r\n\treturn matches ? decodeURIComponent(matches[1]) : undefined\r\n}\r\n",["160","161"],"D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\index.js",[],"D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\components\\websocket\\WebSocketHOC.jsx",["162","163","164"],"D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\components\\loader\\Loader.jsx",["165"],"import s from './Loader.module.scss'\r\nimport React from 'react';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className={s.loader}>\r\n            <img src={'https://media.giphy.com/media/3y0oCOkdKKRi0/giphy.gif'} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;\r\n","D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\contexts\\ChatsProvider.jsx",["166"],"import { createContext, useState } from \"react\";\r\nimport { ChatAPI } from \"../api/api\";\r\nimport { useLocalStorage } from './../utils/useLocalStorage';\r\n\r\nexport const ChatsContext = createContext()\r\n\r\nconst ChatsProvider = ({ children }) => {\r\n\t// chats state\r\n\tconst [chatsState, setChatsState] = useLocalStorage('messenger', {\r\n\t\tisSet: false,\r\n\t\tactiveChatId: null,\r\n\t\trooms: [\r\n\t\t\t{\r\n\t\t\t\tavatar_url: null,\r\n\t\t\t\tcountOfMembers: null,\r\n\t\t\t\tcreated_at: null,\r\n\t\t\t\tcreated_by_user_id: null,\r\n\t\t\t\tdeleted_at: null,\r\n\t\t\t\tid: null,\r\n\t\t\t\tmembers: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tavatar_url: null,\r\n\t\t\t\t\t\tcreated_at: null,\r\n\t\t\t\t\t\temail: null,\r\n\t\t\t\t\t\temail_verified_at: null,\r\n\t\t\t\t\t\tid: null,\r\n\t\t\t\t\t\tname: null,\r\n\t\t\t\t\t\tpivot: {\r\n\t\t\t\t\t\t\tchat_id: null,\r\n\t\t\t\t\t\t\tuser_id: null,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tupdated_at: null,\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t\tname: null,\r\n\t\t\t\tupdated_at: null,\r\n\t\t\t\tmessages: {\r\n\t\t\t\t\tdata: [ // messages\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tid: null,\r\n\t\t\t\t\t\t\tchat_id: null,\r\n\t\t\t\t\t\t\tuser_id: null,\r\n\t\t\t\t\t\t\tcontent: null,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t\tcurrentChunk: 1, // page\r\n\t\t\t\t\tisLoaderActive: false,\r\n\t\t\t\t\tmessagesCount: null,\r\n\t\t\t\t\tpages: null,\r\n\t\t\t\t\tisTyping: false\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t],\r\n\t})\r\n\r\n\t// set data\r\n\tconst setChatsData = (data) => {\r\n\t\tconsole.log('allChats set', {\r\n\t\t\t...chatsState,\r\n\t\t\tisSet: true,\r\n\t\t\trooms: data.map(room => {\r\n\t\t\t\tconsole.log('room.id', room.id); return ({\r\n\t\t\t\t\t...room,\r\n\t\t\t\t\tmessages: {\r\n\t\t\t\t\t\tdata: data.find(r => r.id === room.id).messages.data,\r\n\t\t\t\t\t\tcurrentChunk: 1,\r\n\t\t\t\t\t\tisLoaderActive: false,\r\n\t\t\t\t\t\tpages: data.find(r => r.id === room.id).messages.pages\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t})\r\n\t\tsetChatsState(chatsState => ({\r\n\t\t\t...chatsState,\r\n\t\t\tisSet: true,\r\n\t\t\trooms: data.map(room => ({\r\n\t\t\t\t...room,\r\n\t\t\t\tmessages: {\r\n\t\t\t\t\tdata: data.find(r => r.id === room.id).messages.data,\r\n\t\t\t\t\tcurrentChunk: 1,\r\n\t\t\t\t\tisLoaderActive: false,\r\n\t\t\t\t\tpages: data.find(r => r.id === room.id).messages.pages\r\n\t\t\t\t}\r\n\t\t\t}))\r\n\t\t}))\r\n\t}\r\n\r\n\t// add new message\r\n\tconst setNewMessage = (newMessage, chatId, isAddable) => {\r\n\r\n\t\tconsole.log('newMessage', newMessage)\r\n\r\n\t\tconsole.log('WebSocketHOC.jsx | updateMessages() | chatsState before', chatsState)\r\n\r\n\t\tif (isAddable) {\r\n\t\t\tconst newChatsState = (chatsState) => ({\r\n\t\t\t\t...chatsState,\r\n\t\t\t\trooms: [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t...chatsState.rooms.find(r => r.id === chatId),\r\n\t\t\t\t\t\tmessages: {\r\n\t\t\t\t\t\t\t...chatsState.rooms.find(r => r.id === chatId).messages,\r\n\t\t\t\t\t\t\tpages: Math.ceil(chatsState.rooms.find(r => r.id === chatId).messages.messagesCount / 25),\r\n\t\t\t\t\t\t\tdata: [\r\n\t\t\t\t\t\t\t\tnewMessage,\r\n\t\t\t\t\t\t\t\t...chatsState.rooms.find(r => r.id === chatId).messages.data, // {data: [{..}, {..}]\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t...chatsState.rooms.filter(r => r.id !== chatId), // [{...}, {...}]\r\n\t\t\t\t]\r\n\t\t\t})\r\n\t\r\n\t\t\tsetChatsState(chatsState => newChatsState(chatsState))\t\r\n\t\t}\r\n\r\n\r\n\r\n\t\t// if (isMyMessage) {\r\n\t\t// \tconst newChatsState = (chatsState) => ({\r\n\t\t// \t\t...chatsState,\r\n\t\t// \t\trooms: [\r\n\t\t// \t\t\t{\r\n\t\t// \t\t\t\t...chatsState.rooms.find(r => r.id === chatId),\r\n\t\t// \t\t\t\tmessages: {\r\n\t\t// \t\t\t\t\t...chatsState.rooms.find(r => r.id === chatId).messages,\r\n\t\t// \t\t\t\t\tdata: [\r\n\t\t// \t\t\t\t\t\tnewMessage,\r\n\t\t// \t\t\t\t\t\t...chatsState.rooms.find(r => r.id === chatId).messages.data, // {data: [{..}, {..}]\r\n\t\t// \t\t\t\t\t]\r\n\t\t// \t\t\t\t}\r\n\t\t// \t\t\t},\r\n\t\t// \t\t\t...chatsState.rooms.filter(r => r.id !== chatId), // [{...}, {...}]\r\n\t\t// \t\t]\r\n\t\t// \t})\r\n\r\n\t\t// \tsetChatsState(chatsState => newChatsState(chatsState))\r\n\t\t// \tconsole.log('WebSocketHOC.jsx | updateMessages() | newChatsState after', newChatsState)\r\n\t\t// } else {\r\n\t\t// \tconst newChatsState = (chatsState) => ({\r\n\t\t// \t\t...chatsState,\r\n\t\t// \t\trooms: [\r\n\t\t// \t\t\t{\r\n\t\t// \t\t\t\t...chatsState.rooms.find(r => r.id)\r\n\t\t// \t\t\t}\r\n\t\t// \t\t]\r\n\t\t// \t})\r\n\r\n\t\t// \tsetChatsState(chatsState => newChatsState)\r\n\t\t// }\r\n\t\t\r\n\t}\r\n\r\n\t// set active chat id\r\n\tconst setActiveChat = async (chatId) => {\r\n\t\t// set chat\r\n\t\tconsole.log('set active chat = ', chatId)\r\n\t\tsetChatsState(chatsState => ({ ...chatsState, activeChatId: chatId }))\r\n\r\n\t\t// get pagination links and meta data\r\n\t\t// const chatData = await ChatAPI.getChat(chatId)\r\n\t\t// console.log('chatData', chatData)\r\n\t\t// setChatsState(chatsState => ({...chatsState, rooms: [\r\n\t\t// \t{\r\n\t\t// \t\t...chatsState.rooms.find(r => r.id === chatId),\r\n\t\t// \t\tmessages: {\r\n\t\t// \t\t\t...chatsState.rooms.find(r => r.id === chatId).messages,\r\n\t\t// \t\t\tdata: [\r\n\t\t// \t\t\t\tchatData,\r\n\t\t// \t\t\t\t...chatsState.rooms.find(r => r.id === chatId).messages.data, // {data: [{..}, {..}]\r\n\t\t// \t\t\t]\r\n\t\t// \t\t}\r\n\t\t// \t},\r\n\t\t// \t...chatsState.rooms.filter(r => r.id !== chatId), // [{...}, {...}]\r\n\t\t// ]}))\r\n\t}\r\n\r\n\t// pagination on scroll\r\n\tlet inLoad = false\r\n\tconst onScrollToTop = async (e) => {\r\n\r\n\t\t// offset for top which will be start load if scroll to him\r\n\t\tconst offset = 2\r\n\r\n\t\t// console.log('next on scroll state', ({\r\n\t\t// \t...chatsState, rooms: [\r\n\t\t// \t\t...chatsState.rooms.filter(room => room.id !== chatsState.activeChatId),\r\n\t\t// \t\t{\r\n\t\t// \t\t\t...chatsState.rooms.find(room => room.id === chatsState.activeChatId),\r\n\t\t// \t\t\tmessages: { ...chatsState.rooms.find(room => room.id === chatsState.activeChatId).messages, isLoaderActive: true }\r\n\t\t// \t\t}\r\n\t\t// \t]\r\n\t\t// }))\r\n\r\n\t\t// // set isLoaderActive as true\r\n\t\t// const stateCopy = Object.assign(chatsState)\r\n\t\t// const rooms = [\r\n\t\t// \t...stateCopy.rooms.map(room => {\r\n\t\t// \t\t// if it target chat\r\n\t\t// \t\tif (room.id === stateCopy.activeChatId) {\r\n\t\t// \t\t\troom.messages.isLoaderActive = true\r\n\t\t// \t\t}\r\n\r\n\t\t// \t\treturn room\r\n\t\t// \t})\r\n\t\t// ]\r\n\t\t// setChatsState(chatsState => ({\r\n\t\t// \t...chatsState, rooms\r\n\t\t// }))\r\n\r\n\t\t// check\r\n\t\tconst currentChat = chatsState.rooms.find(room => room.id === chatsState.activeChatId)\r\n\t\tconsole.log('currentChat', currentChat)\r\n\t\tconst currentChunk = currentChat.messages.currentChunk\r\n\t\tconsole.log('currentChunk', currentChunk)\r\n\t\tconst pages = currentChat.messages.pages\r\n\t\tconsole.log('pages', pages)\r\n\t\t// const isLoaderActive = chatsState.rooms.find(room => room.id === chatsState.activeChatId).messages.isLoaderActive\r\n\t\t// console.log('isLoaderActive', isLoaderActive)\r\n\t\tconst isShouldToLoadNextChunk = e.target.scrollHeight - e.target.clientHeight - offset <= Math.abs(e.target.scrollTop) && !inLoad && (currentChunk < pages)\r\n\r\n\t\t// load next chunk\r\n\t\tif (isShouldToLoadNextChunk) {\r\n\r\n\t\t\tinLoad = true\r\n\r\n\t\t\t// set isLoaderActive as true\r\n\t\t\tconst stateCopy = Object.assign(chatsState)\r\n\t\t\tconst rooms = [\r\n\t\t\t\t...stateCopy.rooms.map(room => {\r\n\t\t\t\t\t// if it target chat\r\n\t\t\t\t\tif (room.id === stateCopy.activeChatId) {\r\n\t\t\t\t\t\troom.messages.isLoaderActive = true\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn room\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t\tsetChatsState(chatsState => ({\r\n\t\t\t\t...chatsState, rooms\r\n\t\t\t}))\r\n\r\n\t\t\t// const url = chatsState.rooms.find(room => room.id === chatsState.activeChatId)\r\n\t\t\t// console.log('url', url)\r\n\t\t\t// console.log('chatsState.activeChatId', chatsState.activeChatId)\r\n\t\t\tconst chatId = chatsState.activeChatId\r\n\t\t\tconst page = chatsState.rooms.find(room => room.id === chatId).messages.currentChunk + 1\r\n\r\n\t\t\t// console.log('page', page)\r\n\t\t\tconst nextMessages = await ChatAPI.getPaginatedChunk(chatId, page)\r\n\t\t\tconsole.log('nextMessages', nextMessages)\r\n\t\t\tconst stateCopy2 = Object.assign(chatsState)\r\n\t\t\tconst rooms2 = [\r\n\t\t\t\t...stateCopy.rooms.map(room => {\r\n\t\t\t\t\t// if it target chat\r\n\t\t\t\t\tif (room.id === stateCopy2.activeChatId) {\r\n\t\t\t\t\t\troom.messages.currentChunk = room.messages.currentChunk + 1\r\n\t\t\t\t\t\troom.messages.data.push(...nextMessages.data)\r\n\t\t\t\t\t\troom.messages.isLoaderActive = false\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn room\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t\tconsole.log('new chats state', {\r\n\t\t\t\t...chatsState,\r\n\t\t\t\trooms: rooms2\r\n\t\t\t})\r\n\t\t\tsetChatsState(chatsState => ({\r\n\t\t\t\t...chatsState,\r\n\t\t\t\trooms: rooms2\r\n\t\t\t}))\r\n\t\t\t// console.log('nextMessages', nextMessages)\r\n\t\t}\r\n\r\n\t\tinLoad = false\r\n\r\n\r\n\r\n\t\t// const nextMessages = await \r\n\t\t// console.log('chatsState.activeChatId', chatsState.activeChatId)\r\n\t\t// chatsState.find()\r\n\r\n\t\t// console.log({\r\n\t\t// \tscrollHeight: e.target.scrollHeight,\r\n\t\t// \tclientHeight: e.target.clientHeight,\r\n\t\t// \tscrollTop: e.target.scrollTop\r\n\t\t// })\r\n\t\t// console.log('onScrollToTop function | result =', e.target.scrollHeight - e.target.clientHeight - offset <= Math.abs(e.target.scrollTop))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ChatsContext.Provider value={{ chatsState, setNewMessage, setChatsData, setActiveChat, onScrollToTop }}>\r\n\t\t\t{children}\r\n\t\t</ChatsContext.Provider>\r\n\t)\r\n}\r\n\r\nexport default ChatsProvider\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t// current_page: null,\r\n\t\t\t\t\t\t// first_page_url: null,\r\n\t\t\t\t\t\t// from: null,\r\n\t\t\t\t\t\t// last_page: null,\r\n\t\t\t\t\t\t// last_page_url: null,\r\n\t\t\t\t\t\t// links: [\r\n\t\t\t\t\t\t// \t{\r\n\t\t\t\t\t\t// \t\turl: null,\r\n\t\t\t\t\t\t// \t\tlabel: null,\r\n\t\t\t\t\t\t// \t\tactive: null,\r\n\t\t\t\t\t\t// \t},\r\n\t\t\t\t\t\t// ],\r\n\t\t\t\t\t\t// next_page_url: null,\r\n\t\t\t\t\t\t// path: null,\r\n\t\t\t\t\t\t// per_page: null,\r\n\t\t\t\t\t\t// prev_page_url: null,\r\n\t\t\t\t\t\t// to: null,\r\n\t\t\t\t\t\t// total: null,","D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\components\\auth\\AuthHOC.jsx",["167","168","169","170"],"import React from 'react';\r\nimport { StoreContext } from '../../contexts/StoreProvider';\r\nimport { ChatsContext } from './../../contexts/ChatsProvider';\r\nimport { useContext } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { ChatsAPI } from '../../api/api';\r\nimport { AuthAPI } from './../../api/api';\r\n\r\nconst AuthHOC = ({children}) => {\r\n\r\n    // context\r\n    const {state, setState} = useContext(StoreContext)\r\n    const {chatsState, setChatsData} = useContext(ChatsContext)\r\n\r\n    // check auth and set init\r\n\tuseEffect(() => {\r\n\t\t// check auth and redirect if not auth\r\n\t\tconst fetchAuth = async () => {\r\n\t\t\tconst r = await AuthAPI.user()\r\n\t\t\tif (r.status === 401) {\r\n\t\t\t\tsetState((state) => ({\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tappInitialized: true,\r\n\t\t\t\t\tauth: false,\r\n\t\t\t\t}))\r\n\t\t\t\t// redirect\r\n\t\t\t\tif (window.location.pathname != \"/\") {\r\n\t\t\t\t\twindow.location.assign(\"/\")\r\n\t\t\t\t}\r\n\t\t\t} else if (r.status === 500) {\r\n\t\t\t\tconsole.warn(\r\n\t\t\t\t\t\"Кажется, с сервером сейчас какие-то неполадки. Пожалуйста, попробуйте зайти позже.\"\r\n\t\t\t\t)\r\n\t\t\t\tsetState((state) => ({\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tappInitialized: true,\r\n\t\t\t\t\tauth: false,\r\n\t\t\t\t\tappError: r.data.error,\r\n\t\t\t\t\tmodalType: \"error\",\r\n\t\t\t\t\tmodalTitle: \"Error\",\r\n\t\t\t\t\tmodalAllowForClose: false,\r\n\t\t\t\t\tisModalOpen: true,\r\n\t\t\t\t}))\r\n\t\t\t} else {\r\n\t\t\t\tsetState((state) => ({\r\n\t\t\t\t\t...state,\r\n\t\t\t\t\tappInitialized: true,\r\n\t\t\t\t\tuser_id: r.id,\r\n\t\t\t\t\tauth: true,\r\n\t\t\t\t\tname: r.name,\r\n\t\t\t\t\tavatarUrl: r.avatar_url,\r\n\t\t\t\t}))\r\n\t\t\t}\r\n\t\t}\r\n\t\tfetchAuth()\r\n\r\n\t\t// receive data\r\n\t\tconst receiveChats = async () => {\r\n\t\t\tconst c = await ChatsAPI.chats()\r\n\t\t\tif (c) {\r\n\t\t\t\t// setRooms(c.data)\r\n\t\t\t\t// console.log('STATE', state, \"|\", { ...state, rooms: c.data })\r\n\t\t\t\tconsole.log('set')\r\n\t\t\t\tsetChatsData(c.data)\r\n\t\t\t}\r\n\t\t}\r\n\t\treceiveChats()\r\n\t}, [])\r\n\r\n    return (\r\n        <>\r\n            {children}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AuthHOC;\r\n","D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\contexts\\StoreProvider.jsx",["171"],"D:\\OSPanel\\domains\\slien\\react-web-chat\\src\\utils\\useLocalStorage.js",[],{"ruleId":"172","severity":1,"message":"173","line":1,"column":8,"nodeType":"174","messageId":"175","endLine":1,"endColumn":9},{"ruleId":"172","severity":1,"message":"176","line":3,"column":8,"nodeType":"174","messageId":"175","endLine":3,"endColumn":24},{"ruleId":"172","severity":1,"message":"177","line":4,"column":50,"nodeType":"174","messageId":"175","endLine":4,"endColumn":60},{"ruleId":"172","severity":1,"message":"178","line":4,"column":62,"nodeType":"174","messageId":"175","endLine":4,"endColumn":73},{"ruleId":"172","severity":1,"message":"179","line":7,"column":8,"nodeType":"174","messageId":"175","endLine":7,"endColumn":13},{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"172","severity":1,"message":"184","line":2,"column":22,"nodeType":"174","messageId":"175","endLine":2,"endColumn":30},{"ruleId":"172","severity":1,"message":"185","line":2,"column":32,"nodeType":"174","messageId":"175","endLine":2,"endColumn":41},{"ruleId":"172","severity":1,"message":"186","line":2,"column":49,"nodeType":"174","messageId":"175","endLine":2,"endColumn":60},{"ruleId":"172","severity":1,"message":"187","line":4,"column":8,"nodeType":"174","messageId":"175","endLine":4,"endColumn":12},{"ruleId":"172","severity":1,"message":"188","line":5,"column":10,"nodeType":"174","messageId":"175","endLine":5,"endColumn":18},{"ruleId":"172","severity":1,"message":"189","line":11,"column":20,"nodeType":"174","messageId":"175","endLine":11,"endColumn":28},{"ruleId":"190","severity":1,"message":"191","line":36,"column":111,"nodeType":"192","messageId":"193","endLine":36,"endColumn":113},{"ruleId":"180","replacedBy":"194"},{"ruleId":"182","replacedBy":"195"},{"ruleId":"172","severity":1,"message":"184","line":2,"column":40,"nodeType":"174","messageId":"175","endLine":2,"endColumn":48},{"ruleId":"172","severity":1,"message":"196","line":11,"column":10,"nodeType":"174","messageId":"175","endLine":11,"endColumn":15},{"ruleId":"180","replacedBy":"197"},{"ruleId":"182","replacedBy":"198"},{"ruleId":"180","replacedBy":"199"},{"ruleId":"182","replacedBy":"200"},{"ruleId":"172","severity":1,"message":"185","line":2,"column":17,"nodeType":"174","messageId":"175","endLine":2,"endColumn":26},{"ruleId":"172","severity":1,"message":"201","line":3,"column":8,"nodeType":"174","messageId":"175","endLine":3,"endColumn":12},{"ruleId":"172","severity":1,"message":"177","line":5,"column":16,"nodeType":"174","messageId":"175","endLine":5,"endColumn":26},{"ruleId":"172","severity":1,"message":"202","line":6,"column":10,"nodeType":"174","messageId":"175","endLine":6,"endColumn":17},{"ruleId":"172","severity":1,"message":"188","line":6,"column":19,"nodeType":"174","messageId":"175","endLine":6,"endColumn":27},{"ruleId":"172","severity":1,"message":"203","line":8,"column":8,"nodeType":"174","messageId":"175","endLine":8,"endColumn":12},{"ruleId":"190","severity":1,"message":"191","line":17,"column":57,"nodeType":"192","messageId":"193","endLine":17,"endColumn":59},{"ruleId":"190","severity":1,"message":"191","line":26,"column":57,"nodeType":"192","messageId":"193","endLine":26,"endColumn":59},{"ruleId":"172","severity":1,"message":"204","line":32,"column":15,"nodeType":"174","messageId":"175","endLine":32,"endColumn":21},{"ruleId":"172","severity":1,"message":"205","line":33,"column":15,"nodeType":"174","messageId":"175","endLine":33,"endColumn":23},{"ruleId":"190","severity":1,"message":"191","line":35,"column":53,"nodeType":"192","messageId":"193","endLine":35,"endColumn":55},{"ruleId":"172","severity":1,"message":"204","line":36,"column":15,"nodeType":"174","messageId":"175","endLine":36,"endColumn":21},{"ruleId":"172","severity":1,"message":"205","line":37,"column":15,"nodeType":"174","messageId":"175","endLine":37,"endColumn":23},{"ruleId":"206","severity":1,"message":"207","line":42,"column":13,"nodeType":"208","endLine":42,"endColumn":38},{"ruleId":"180","replacedBy":"209"},{"ruleId":"182","replacedBy":"210"},{"ruleId":"172","severity":1,"message":"211","line":1,"column":8,"nodeType":"174","messageId":"175","endLine":1,"endColumn":13},{"ruleId":"172","severity":1,"message":"212","line":1,"column":17,"nodeType":"174","messageId":"175","endLine":1,"endColumn":26},{"ruleId":"172","severity":1,"message":"186","line":1,"column":28,"nodeType":"174","messageId":"175","endLine":1,"endColumn":39},{"ruleId":"172","severity":1,"message":"213","line":1,"column":53,"nodeType":"174","messageId":"175","endLine":1,"endColumn":60},{"ruleId":"172","severity":1,"message":"184","line":4,"column":10,"nodeType":"174","messageId":"175","endLine":4,"endColumn":18},{"ruleId":"172","severity":1,"message":"188","line":5,"column":10,"nodeType":"174","messageId":"175","endLine":5,"endColumn":18},{"ruleId":"172","severity":1,"message":"214","line":7,"column":10,"nodeType":"174","messageId":"175","endLine":7,"endColumn":22},{"ruleId":"172","severity":1,"message":"187","line":8,"column":8,"nodeType":"174","messageId":"175","endLine":8,"endColumn":12},{"ruleId":"215","severity":1,"message":"216","line":22,"column":40,"nodeType":"174","endLine":22,"endColumn":47},{"ruleId":"215","severity":1,"message":"217","line":23,"column":8,"nodeType":"218","endLine":23,"endColumn":10,"suggestions":"219"},{"ruleId":"220","severity":1,"message":"221","line":3,"column":43,"nodeType":"222","messageId":"223","endLine":3,"endColumn":44,"suggestions":"224"},{"ruleId":"220","severity":1,"message":"225","line":3,"column":51,"nodeType":"222","messageId":"223","endLine":3,"endColumn":52,"suggestions":"226"},{"ruleId":"220","severity":1,"message":"227","line":3,"column":53,"nodeType":"222","messageId":"223","endLine":3,"endColumn":54,"suggestions":"228"},{"ruleId":"220","severity":1,"message":"229","line":3,"column":55,"nodeType":"222","messageId":"223","endLine":3,"endColumn":56,"suggestions":"230"},{"ruleId":"220","severity":1,"message":"231","line":3,"column":61,"nodeType":"222","messageId":"223","endLine":3,"endColumn":62,"suggestions":"232"},{"ruleId":"220","severity":1,"message":"233","line":3,"column":63,"nodeType":"222","messageId":"223","endLine":3,"endColumn":64,"suggestions":"234"},{"ruleId":"180","replacedBy":"235"},{"ruleId":"182","replacedBy":"236"},{"ruleId":"172","severity":1,"message":"186","line":3,"column":39,"nodeType":"174","messageId":"175","endLine":3,"endColumn":50},{"ruleId":"172","severity":1,"message":"237","line":10,"column":10,"nodeType":"174","messageId":"175","endLine":10,"endColumn":20},{"ruleId":"215","severity":1,"message":"238","line":66,"column":5,"nodeType":"218","endLine":66,"endColumn":7,"suggestions":"239"},{"ruleId":"206","severity":1,"message":"207","line":7,"column":13,"nodeType":"208","endLine":7,"endColumn":82},{"ruleId":"172","severity":1,"message":"184","line":1,"column":25,"nodeType":"174","messageId":"175","endLine":1,"endColumn":33},{"ruleId":"172","severity":1,"message":"196","line":12,"column":12,"nodeType":"174","messageId":"175","endLine":12,"endColumn":17},{"ruleId":"172","severity":1,"message":"237","line":13,"column":12,"nodeType":"174","messageId":"175","endLine":13,"endColumn":22},{"ruleId":"190","severity":1,"message":"191","line":27,"column":34,"nodeType":"192","messageId":"193","endLine":27,"endColumn":36},{"ruleId":"215","severity":1,"message":"240","line":68,"column":5,"nodeType":"218","endLine":68,"endColumn":7,"suggestions":"241"},{"ruleId":"172","severity":1,"message":"184","line":1,"column":25,"nodeType":"174","messageId":"175","endLine":1,"endColumn":33},"no-unused-vars","'s' is defined but never used.","Identifier","unusedVar","'RegistrationForm' is defined but never used.","'useHistory' is defined but never used.","'useLocation' is defined but never used.","'Modal' is defined but never used.","no-native-reassign",["242"],"no-negated-in-lhs",["243"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'useCallback' is defined but never used.","'Echo' is defined but never used.","'ChatsAPI' is defined but never used.","'setState' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["242"],["243"],"'state' is assigned a value but never used.",["242"],["243"],["242"],["243"],"'Room' is defined but never used.","'AuthAPI' is defined but never used.","'Chat' is defined but never used.","'avatar' is assigned a value but never used.","'roomName' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["242"],["243"],"'React' is defined but never used.","'createRef' is defined but never used.","'useMemo' is defined but never used.","'StoreContext' is defined but never used.","react-hooks/exhaustive-deps","The ref value 'messagesContainer.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'messagesContainer.current' to a variable inside the effect, and use that variable in the cleanup function.","React Hook useEffect has a missing dependency: 'onScrollToTop'. Either include it or remove the dependency array.","ArrayExpression",["244"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["245","246"],"Unnecessary escape character: \\(.",["247","248"],"Unnecessary escape character: \\).",["249","250"],"Unnecessary escape character: \\[.",["251","252"],"Unnecessary escape character: \\/.",["253","254"],"Unnecessary escape character: \\+.",["255","256"],["242"],["243"],"'chatsState' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setNewMessage' and 'state.user_id'. Either include them or remove the dependency array.",["257"],"React Hook useEffect has missing dependencies: 'setChatsData' and 'setState'. Either include them or remove the dependency array.",["258"],"no-global-assign","no-unsafe-negation",{"desc":"259","fix":"260"},{"messageId":"261","fix":"262","desc":"263"},{"messageId":"264","fix":"265","desc":"266"},{"messageId":"261","fix":"267","desc":"263"},{"messageId":"264","fix":"268","desc":"266"},{"messageId":"261","fix":"269","desc":"263"},{"messageId":"264","fix":"270","desc":"266"},{"messageId":"261","fix":"271","desc":"263"},{"messageId":"264","fix":"272","desc":"266"},{"messageId":"261","fix":"273","desc":"263"},{"messageId":"264","fix":"274","desc":"266"},{"messageId":"261","fix":"275","desc":"263"},{"messageId":"264","fix":"276","desc":"266"},{"desc":"277","fix":"278"},{"desc":"279","fix":"280"},"Update the dependencies array to be: [onScrollToTop]",{"range":"281","text":"282"},"removeEscape",{"range":"283","text":"284"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"285","text":"286"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"287","text":"284"},{"range":"288","text":"286"},{"range":"289","text":"284"},{"range":"290","text":"286"},{"range":"291","text":"284"},{"range":"292","text":"286"},{"range":"293","text":"284"},{"range":"294","text":"286"},{"range":"295","text":"284"},{"range":"296","text":"286"},"Update the dependencies array to be: [setNewMessage, state.user_id]",{"range":"297","text":"298"},"Update the dependencies array to be: [setChatsData, setState]",{"range":"299","text":"300"},[967,969],"[onScrollToTop]",[116,117],"",[116,116],"\\",[124,125],[124,124],[126,127],[126,126],[128,129],[128,128],[134,135],[134,134],[136,137],[136,136],[2175,2177],"[setNewMessage, state.user_id]",[1776,1778],"[setChatsData, setState]"]